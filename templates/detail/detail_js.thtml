{# begin {templatelocation} #}
<noscript>
  <span class="alert">{$LANG_SHOP['no_javascript']}</span>
</noscript>
<script type="text/javascript">
function SHOPupdateImage(img_file, lg_img)
{
    document.getElementById("disp_img").src = "{site_url}/lglib/img.php?src=" +
        img_file + "&plugin=shop&sess={session_id}&width=460&height=460";
//    document.getElementById("disp_img").src = disp_img;
//    document.getElementById("lg_img").href = lg_img;
}
</script>
{!if have_attributes}
<script type="text/javascript">
var opt_prices = {opt_prices};
function isValidField(obj)
{
    if (null == obj) {
        return false;
    }
    if ("undefined" == typeof(obj)) {
        return false;
    }
    return true;
}

function ProcessForm(form)
{
    if (typeof(form) == 'undefined') {
        return;
    }
    var dataS = {
        "action": "validateOpts",
    };
    data = $("#" + form.id).serialize() + '&' + $.param(dataS);
    $.ajax({
        type: "GET",
        dataType: "json",
        url: glfusionSiteUrl + "/shop/ajax.php",
        data: data,
        success: function(result) {
            try {
console.log(result);
                $("div#avail_msg").text(result.msg);
                // Enable or disable the purchase buttons
                if (result.allowed) {
                    $("button#btn_add_cart_{id}").prop("disabled", false);
                    $("button#btn_add_cart_{id}").attr("class", "uk-button uk-button-small uk-button-success");
                } else {
                    $("button#btn_add_cart_{id}").prop("disabled", true);
                    $("button#btn_add_cart_{id}").attr("class", "uk-button uk-button-small uk-button-disabled");

                }
            } catch(err) {
            }
        }
    });
    return status;

    var opt_price, i;
    var price, frm;
    var price_was;  // used if item is on sale

    frm = document.getElementById("add_cart_{id}");
    if (frm === null) return;

    price = {price};
    price_was = {orig_price_val};

    options = frm.elements['options[]'];
    if (typeof(options) == "undefined") {
        return;
    }

    // If there's only one option selection, then 'options' will be an array
    // of all it's option items.  We need to handle them differently than if
    // there are multiple option selections.
    if (NodeList.prototype.isPrototypeOf(options)) {
        // There are multiple options
        for (i = 0; i < options.length; i++) {
            if (!isValidField(options[i])) {
                continue;
            }
            if (
                options[i].type == "select-one" ||
                (options[i].type == "checkbox" && options[i].checked) ||
                (options[i].type == "radio" && options[i].checked)
            ) {
                opt_price = opt_prices[options[i].value] * 1;
                price += opt_price;
                price_was += opt_price;
            }
        }
    } else {
        // There is a single option, check the value.
        // Checkboxes are individual options.
        if (
            options.type == "select-one" ||
            (options.type == "checkbox" && options[i].checked)
        ) {
            opt_price = opt_prices[options.value] * 1;
            price += opt_price;
            price_was += opt_price;
        }
    }
console.log(price);

    // Update the dispayed price on the form
    price = price.toFixed({cur_decimals});
    if (typeof(frm.price) != "undefined") {
        frm.price.value = price;
    }
    document.getElementById('price').innerHTML = price;

    // Update the original pre-sale price, if displayed.
    var x = document.getElementById('price_was');
    if (x != null) {
        price_was = price_was.toFixed({cur_decimals});
        x.innerHTML = price_was;
    }
    return;
}

function checkForJavascript()
{
    e = document.getElementById('add_cart');
    if (e !== null)
        e.style.display = "inline";
}

$(document).ready(function() {
    checkForJavascript();
    ProcessForm();
});
</script>
{!endif}
{# end {templatelocation} #}
